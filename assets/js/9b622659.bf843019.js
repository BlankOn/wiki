"use strict";(self.webpackChunkdocusaurus_wiki=self.webpackChunkdocusaurus_wiki||[]).push([[60281],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var i=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=i.createContext({}),c=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return i.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),d=a,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||r;return t?i.createElement(f,o(o({ref:n},u),{},{components:t})):i.createElement(f,o({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<r;c++)o[c]=t[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},79e3:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var i=t(83117),a=t(80102),r=(t(67294),t(3905)),o=["components"],s={},l=void 0,c={unversionedId:"TimPengembang/Dokumentasi/Panduan/PanduanWiki/CamelCase",id:"TimPengembang/Dokumentasi/Panduan/PanduanWiki/CamelCase",title:"CamelCase",description:"CamelCase",source:"@site/wiki/TimPengembang/Dokumentasi/Panduan/PanduanWiki/CamelCase.md",sourceDirName:"TimPengembang/Dokumentasi/Panduan/PanduanWiki",slug:"/TimPengembang/Dokumentasi/Panduan/PanduanWiki/CamelCase",permalink:"/TimPengembang/Dokumentasi/Panduan/PanduanWiki/CamelCase",draft:!1,editUrl:"https://github.com/BlankOn/wiki/edit/master/wiki/TimPengembang/Dokumentasi/Panduan/PanduanWiki/CamelCase.md",tags:[],version:"current",frontMatter:{}},u={},m=[{value:"CamelCase",id:"camelcase",level:2},{value:"Customizing the Wiki behavior",id:"customizing-the-wiki-behavior",level:3},{value:"More information on CamelCase",id:"more-information-on-camelcase",level:3}],p={toc:m};function d(e){var n=e.components,t=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"camelcase"},"CamelCase"),(0,r.kt)("p",null,"New words created by smashing together capitalized words.\nCamelCase is the original wiki convention for creating hyperlinks, with the\nadditional requirement that the capitals are followed by a lower-case letter;\nhence \u201cAlabamA\u201d and \u201cABc\u201d will not be links."),(0,r.kt)("h3",{id:"customizing-the-wiki-behavior"},"Customizing the Wiki behavior"),(0,r.kt)("p",null,"Some people dislike linking by CamelCase. While Trac remains faithful to the\noriginal Wiki style, it provides a number of ways to accomodate users with\ndifferent preferences:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"* There's an option (ignore_missing_pages in the [wiki] section of TracIni)\n  to simply ignore links to missing pages when the link is written using\n  the CamelCase style, instead of that word being replaced by a gray link\n  followed by a question mark.\n  That can be useful when CamelCase style is used to name code artifacts\n  like class names and there's no corresponding page for them.\n* There's an option (split_page_names in the [wiki] section of TracIni) to\n  automatically insert space characters between the words of a CamelCase\n  link when rendering the link.\n* Creation of explicit Wiki links is also easy, see WikiPageNames for\n  details.\n* In addition, Wiki formatting can be disabled completely in some places\n  (e.g. when rendering commit log messages). See wiki_format_messages in\n  the [changeset] section of TracIni.\n")),(0,r.kt)("p",null,"See TracIni for more information on the available options."),(0,r.kt)("h3",{id:"more-information-on-camelcase"},"More information on CamelCase"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"* \u200bhttp://c2.com/cgi/wiki?WikiCase\n* \u200bhttp://en.wikipedia.org/wiki/CamelCase\n")),(0,r.kt)("p",null,"See also: WikiPageNames, WikiNewPage, WikiFormatting, TracWiki"),(0,r.kt)("p",null,"Last modified on 10/16/2014 01:10:30 PM"),(0,r.kt)("hr",null))}d.isMDXComponent=!0}}]);