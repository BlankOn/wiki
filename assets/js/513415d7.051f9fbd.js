"use strict";(self.webpackChunkdocusaurus_wiki=self.webpackChunkdocusaurus_wiki||[]).push([[18762],{3905:function(a,n,e){e.d(n,{Zo:function(){return p},kt:function(){return k}});var t=e(67294);function i(a,n,e){return n in a?Object.defineProperty(a,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[n]=e,a}function r(a,n){var e=Object.keys(a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(a);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(a,n).enumerable}))),e.push.apply(e,t)}return e}function u(a){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?r(Object(e),!0).forEach((function(n){i(a,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(n){Object.defineProperty(a,n,Object.getOwnPropertyDescriptor(e,n))}))}return a}function l(a,n){if(null==a)return{};var e,t,i=function(a,n){if(null==a)return{};var e,t,i={},r=Object.keys(a);for(t=0;t<r.length;t++)e=r[t],n.indexOf(e)>=0||(i[e]=a[e]);return i}(a,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(t=0;t<r.length;t++)e=r[t],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(a,e)&&(i[e]=a[e])}return i}var o=t.createContext({}),s=function(a){var n=t.useContext(o),e=n;return a&&(e="function"==typeof a?a(n):u(u({},n),a)),e},p=function(a){var n=s(a.components);return t.createElement(o.Provider,{value:n},a.children)},d={inlineCode:"code",wrapper:function(a){var n=a.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(a,n){var e=a.components,i=a.mdxType,r=a.originalType,o=a.parentName,p=l(a,["components","mdxType","originalType","parentName"]),m=s(e),k=i,c=m["".concat(o,".").concat(k)]||m[k]||d[k]||r;return e?t.createElement(c,u(u({ref:n},p),{},{components:e})):t.createElement(c,u({ref:n},p))}));function k(a,n){var e=arguments,i=n&&n.mdxType;if("string"==typeof a||i){var r=e.length,u=new Array(r);u[0]=m;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=a,l.mdxType="string"==typeof a?a:i,u[1]=l;for(var s=2;s<r;s++)u[s]=e[s];return t.createElement.apply(null,u)}return t.createElement.apply(null,e)}m.displayName="MDXCreateElement"},72830:function(a,n,e){e.r(n),e.d(n,{assets:function(){return p},contentTitle:function(){return o},default:function(){return k},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var t=e(83117),i=e(80102),r=(e(67294),e(3905)),u=["components"],l={},o="Upload Melalui HTTP Secara Efisien",s={unversionedId:"TimPengembang/Infrastruktur/2009/HttpUpload",id:"TimPengembang/Infrastruktur/2009/HttpUpload",title:"Upload Melalui HTTP Secara Efisien",description:"HTTP Upload",source:"@site/wiki/TimPengembang/Infrastruktur/2009/HttpUpload.md",sourceDirName:"TimPengembang/Infrastruktur/2009",slug:"/TimPengembang/Infrastruktur/2009/HttpUpload",permalink:"/TimPengembang/Infrastruktur/2009/HttpUpload",draft:!1,editUrl:"https://github.com/BlankOn/wiki/edit/master/wiki/TimPengembang/Infrastruktur/2009/HttpUpload.md",tags:[],version:"current",frontMatter:{}},p={},d=[{value:"HTTP Upload",id:"http-upload",level:2},{value:"Rancangan Diskusi Infrastruktur 2009",id:"rancangan-diskusi-infrastruktur-2009",level:4},{value:"Pendahuluan",id:"pendahuluan",level:3},{value:"Gambaran Umum",id:"gambaran-umum",level:3},{value:"Protokol Pengirman",id:"protokol-pengirman",level:3},{value:"Permintaan Upload",id:"permintaan-upload",level:4},{value:"Pengiriman Potongan",id:"pengiriman-potongan",level:4},{value:"Catatan",id:"catatan",level:3},{value:"Pengembangan Selanjutnya",id:"pengembangan-selanjutnya",level:3},{value:"Contoh Implementasi",id:"contoh-implementasi",level:3},{value:"Referensi",id:"referensi",level:3}],m={toc:d};function k(a){var n=a.components,e=(0,i.Z)(a,u);return(0,r.kt)("wrapper",(0,t.Z)({},m,e,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"upload-melalui-http-secara-efisien"},"Upload Melalui HTTP Secara Efisien"),(0,r.kt)("h2",{id:"http-upload"},"HTTP Upload"),(0,r.kt)("h4",{id:"rancangan-diskusi-infrastruktur-2009"},"Rancangan Diskusi Infrastruktur 2009"),(0,r.kt)("h3",{id:"pendahuluan"},"Pendahuluan"),(0,r.kt)("p",null,"Dokumen ini berisi usulan protokol upload melalui HTTP secara efisien. Yang\ndimaksud dengan efisien di sini adalah jika proses upload terputus, maka proses\ntersebut dapat dilanjutkan kapan saja. Proses pengecekan validitas data dengan\nchecksum tidak perlu dilakukan setelah seluruh data terkirim, karena setiap\ndata yang dikirim dilampiri dengan checksum sehingga dapat dipantau\nvaliditasnya."),(0,r.kt)("h3",{id:"gambaran-umum"},"Gambaran Umum"),(0,r.kt)("p",null,"Pengiriman data dilakukan dengan cara memecah data menjadi sejumlah potongan\nkecil lalu setiap potongan dikirimkan terpisah secara berurutan. Setiap\npengiriman potongan, checksum dari potongan tersebut juga dilampirkan sehingga\nserver dapat mengecek validitas potongan tersebut."),(0,r.kt)("p",null,"Proses upload dilakukan dalam dua tahap:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Client memberitahu server bahwa client ingin melakukan upload. Client\nmemberi informasi nama, ukuran, dan checksum data. Server akan membuatkan\nsebuah ID upload untuk sesi upload tersebut."),(0,r.kt)("li",{parentName:"ol"},"Dengan menggunakan ID yang diberikan sebelumnya, client akan mengupload\ndata dalam bentuk potongan-potongan kecil. Informasi panjang, lokasi\n(offset) pada data utuh, dan checksum dari potongan akan dilampirkan pada\nsaat sebuah potongan di-upload.")),(0,r.kt)("h3",{id:"protokol-pengirman"},"Protokol Pengirman"),(0,r.kt)("h4",{id:"permintaan-upload"},"Permintaan Upload"),(0,r.kt)("p",null,"Client mengirim sebuah HTTP POST Request ke sebuah URL pada path tertentu,\nmisalnya /upload/. Informasi berikut dikirimkan ke server pada request\ntersebut."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"filename, nama berkas"),(0,r.kt)("li",{parentName:"ol"},"size, ukuran berkas"),(0,r.kt)("li",{parentName:"ol"},"checksum, checksum berkas\nServer mencatat permintaan upload pada database, lalu membuat sebuah ID khusus\nuntuk sesi upload ini.\nServer memberi respon 201 Created ke client dan memberi tahu lokasi (URL)\ntujuan yang dapat digunakan untuk mengupload potongan. Lokasi upload ini berisi\ninformasi ID yang telah dibuat sebelumnya. Server memberitahu client akan\nlokasi ini dengan cara menuliskannya pada HTTP Response Header Content-\nLocation.\nHTTP/1.1 201 Created\nContent-Location: /upload/ID/\n...")),(0,r.kt)("h4",{id:"pengiriman-potongan"},"Pengiriman Potongan"),(0,r.kt)("p",null,"Setelah lokasi pengiriman potongan didapat, client memulai proses pengiriman\npotongan data. Ukuran potongan dapat disesuaikan sesuai kebutuhan, misalnya\n100KB."),(0,r.kt)("p",null,"Potongan dikirimkan dengan melakukan Multipart HTTP POST Request ke URL yang\ndiberikan oleh server pada tahap permintaan upload. Pada setiap request,\ninformasi berikut dikirimkan oleh client ke server."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"offset, lokasi potongan pada data utuh"),(0,r.kt)("li",{parentName:"ol"},"size, ukuran potongan"),(0,r.kt)("li",{parentName:"ol"},"checksum, checksum potongan"),(0,r.kt)("li",{parentName:"ol"},"data, data potongan")),(0,r.kt)("p",null,"Server akan mengidentifikasi sesi upload melalui URL yang digunakan oleh\nclient. Untuk setiap sesi upload, selain informasi data yang dikirim pada tahap\npermintaan upload, server juga mengetahui sudah seberapa besar data yang\nditerima. Jika sesi upload gagal diidentifikasi oleh server, server mengirim\nrespon dengan kode 404 Not Found."),(0,r.kt)("p",null,"Informasi lokasi potongan (offset) yang dikirimkan harus sesuai dengan ukuran\ndata yang sudah diterima. Hal ini dilakukan agar urutan potongan tetap terjaga\ndengan baik."),(0,r.kt)("p",null,"Data yang diterima oleh server akan dicek validitasnya dengan cara\nmembandingkan ukuran dan checksum data tersebut dengan informasi ukuran (size)\ndan checksum yang dikirimkan."),(0,r.kt)("p",null,"Jika potongan dinyatakan valid, maka potongan tersebut akan ditambahkan pada\ndata yang akan menjadi data akhir yang utuh. Server akan memberikan respon 202\nAccepted kepada client pada kondisi ini."),(0,r.kt)("p",null,"Jika seluruh data sudah diterima, server akan mengecek validitas data berdasar\nchecksumnya. Jika semua sesuai, server akan memproses data tersebut (seperti\nmemindahkannya ke tempat yang tepat) lalu memberikan respon 200 OK ke client.\nKondisi lain yang tidak sesuai harapan akan direspon oleh server dengan kode 409 Conflict."),(0,r.kt)("h3",{id:"catatan"},"Catatan"),(0,r.kt)("p",null,"Metode request atau kode respon belum tentu sesuai dengan tata cara penggunaan\nyang benar yang didefinisikan oleh RFC 2616 (HTTP)."),(0,r.kt)("h3",{id:"pengembangan-selanjutnya"},"Pengembangan Selanjutnya"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Otentikasi client."),(0,r.kt)("li",{parentName:"ol"},"Informasi status upload (sudah seberapa besar data yang terkirim)."),(0,r.kt)("li",{parentName:"ol"},"Informasi ukuran, lokasi, dan checksum potongan dituliskan pada HTTP\nRequest Header (Content-Length, Content-Range, Content-MD5)")),(0,r.kt)("h3",{id:"contoh-implementasi"},"Contoh Implementasi"),(0,r.kt)("p",null,"Dapat dilihat di \u200b",(0,r.kt)("a",{parentName:"p",href:"http://github.com/fajran/test-django-chuck-upload/tree/"},"http://github.com/fajran/test-django-chuck-upload/tree/"),"\nmaster.\nImplementasi tersebut dibuat dengan Django."),(0,r.kt)("h3",{id:"referensi"},"Referensi"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"RFC 2616 (HTTP) \u200b",(0,r.kt)("a",{parentName:"li",href:"http://www.w3.org/Protocols/rfc2616/rfc2616.html"},"http://www.w3.org/Protocols/rfc2616/rfc2616.html"),"\nLast modified on 12/03/2008 02:26:15 PM")),(0,r.kt)("hr",null))}k.isMDXComponent=!0}}]);